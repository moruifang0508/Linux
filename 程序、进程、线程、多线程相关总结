1. 程序（program）：由代码组成，是指令和数据的有序集合，是一个静态的概念。
2. 进程（process）：是一段程序的执行过程，是一个动态的概念，是操作系统动态执行的基本单元，既是基本的分配单元，也是基本的执行单元
进程的概念主要有两点：
第一，进程是一个实体。每个进程都有自己地址空间，一般情况下，包括文本区域（text region）、数据区域（data region）和
堆栈区域（stack region）。文本区域存储处理器执行的代码，即程序；数据区域存储变量和进程执行期间使用的动态分配的内存；堆栈区域存储着活动过程
调用的指令和本地变量。
第二，进程是一个执行中的程序，是动态的过程。
进程有三个状态：就绪、运行和阻塞。就绪就是获取了除cpu外的所有资源，只要处理器分配资源就可以马上执行；运行就是获取了处理器分配的资源、程序开始执行；
阻塞就是当程序条件不够的时候，需要等待条件满足才能执行，如等待i/o操作的时候。
3. 线程
线程是独立运行的程序片段，一个进程中包含一个或多个线程。进程是分配资源的基本单位，线程是独立运行和独立调度的基本单位。

进程和线程的区别：进程有独立的地址空间，一个进程崩溃后，在保护模式下不会对其他进程产生影响 ，而线程只是一个进程中的不同执行路径。
每个进程都有自己完全独立的运行环境，而一个进程内的多个线程可以共享数据和上下文运行环境。
线程有自己的堆栈和局部变量，但线程之间没有独立的地址空间，一个线程死掉就等于整个进程死掉，所以多进程的程序要比多线程的程序强壮。
但进程切换时耗费资源较大，效率要差一些。对于一些要求同时进行并且又要共享某些变量的并发操作，只能用线程，不能用进程。
进程有独立的内存单元，而多个线程可以共享内存。
进程和线程的优缺点：线程执行开销小，但不利于资源的管理和保护，而进程则相反。
