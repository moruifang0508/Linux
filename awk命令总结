awk是一种文本分析工具，。对数据逐行读入，以空格符或tab键作为默认分隔符將每行切片生成多个字段。数据可以是标准输入、一个或多
个文件、或其它命令的输出。
awk中有很多内建的功能，如数组、函数等。

awk命令格式:
awk [-F|-f|-v] ‘BEGIN{} //{command1; command2} END{}’ file
 [-F|-f|-v]   大参数，-F指定分隔符，-f调用脚本，-v定义变量 var=value
'  '          引用代码块
BEGIN   初始化代码块，在对每一行进行处理之前，初始化代码，主要是引用全局变量，设置FS分隔符
//           匹配代码块，可以是字符串或正则表达式
{}           命令代码块，包含一条或多条命令
；          多条命令使用分号分隔
END      结尾代码块，在对每一行进行处理之后再执行的代码块，主要是进行最终计算或输出结尾摘要信息

特殊要点:
$0           表示整个当前行
$1           每行第一个字段
NF          字段数量变量
NR          每行的记录号，多文件记录递增
FNR        与NR类似，不过多文件记录不递增，每个文件都从1开始
\t            制表符
\n           换行符
FS          BEGIN时定义分隔符
RS       输入的记录分隔符， 默认为换行符(即文本是按一行一行输入)
~            匹配，与==相比不是精确比较
!~           不匹配，不精确比较
==         等于，必须全部相等，精确比较
!=           不等于，精确比较
&&　     逻辑与
||             逻辑或
+            匹配时表示1个或1个以上
/[0-9][0-9]+/   两个或两个以上数字
/[0-9][0-9]*/    一个或一个以上数字
FILENAME 文件名
OFS      输出字段分隔符， 默认也是空格，可以改为制表符等
ORS        输出的记录分隔符，默认为换行符,即处理结果也是一行一行输出到屏幕
-F'[:#/]'   定义三个分隔符

lyc: ~ $ cat /etc/passwd
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin

lyc: ~ $ awk -F ':' '{print $1}' /etc/passwd  #以’：‘为分隔符，输出每一行的第一个字段
root
daemon
bin
sys

lyc: ~ $ awk -F ':' '{print $1;print $2}' /etc/passwd #將每行的前两个字段分行输出
root
x
daemon
x
bin
x
sys
x

lyc: ~ $ awk -F: '{print $1,$3,$6}' OFS='\t' /etc/passwd #输出字段1，3，6，以制表符作为分隔符
root	0	/root
daemon	1	/usr/sbin
bin	2	/bin
sys	3	/dev
